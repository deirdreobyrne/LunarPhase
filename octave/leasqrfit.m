pkg load optim;
format long;

ang=csvread("i.csv");
t = (ang([1:524288],1)-ang(1,1))*86400;
dt = 45.0 + 50.0*t/86400/36525;
t = t + dt / 86400;
phaseangle=ang([1:524288],2);
dt=t(2)-t(1);
n = rows(t);
freq=linspace(0,1/dt,n);
degjcy = freq*360*36525*86400;

phase = (1 - cos(phaseangle))/2;

args = [
   4.455916788395823e+00
   3.789022550719889e+05
   4.847287446660956e+00
   4.060747508723456e+05
   3.711912015016090e+00
   3.741949107230363e+05
   6.244925278898623e+00
   5.022680344082363e+06
   1.095592850837296e-01
  -3.649736985992089e-02
   2.202605149250539e-02
   1.408267088017852e-02
   3.735791629462980e-03
   1.951014794328968e-03
   8.091606805138698e-04
   1.008575724100870e-03
  -1.836366081017675e-03
   9.940741485840730e-04
   9.515708542153308e-04
   7.949457895819001e-04
  -7.165256461239489e-04
  -5.333556551468582e-04
  -6.006080318565972e-05
   1.998950050166035e-04
  -1.551249629605536e-05
   1.733339816722457e-04
   1.511645106713487e-04
   3.824227370604119e-07
   2.307429487398359e-07
   1.018545905994078e-06
   7.403839291589762e-05
  -4.951751403499936e-06
  -2.147070817631833e-06
  -3.697331416581817e-06
  -1.219019913159247e-04
  -2.600546963158116e-04
   9.434272155349359e-05
  -1.400623725165942e-04
   7.703975084314492e-05
   6.284342530002878e-05
  -4.979816786461988e-05
   1.789410242558448e-04
   4.026243430936187e-05
   3.085493748754378e-05
   3.666079113736591e-05
  -3.575817041921513e-05
  -3.823095408020891e-04
   3.258828834582451e-05
  -2.665358871153805e-05
  -9.031978159721983e-04
   1.636881342496767e-05
  -6.736111023582282e-06
  -1.787998984635895e-06
  -1.885292382560763e-05
   1.365206005851486e-05
  -5.188392177370762e-06
  -4.302252071059983e+23
   1.295101137710685e-03
   ];

dpargs = [
  1e-3, 1e-6, 1e-3, 1e-6, 1e-3, 1e-6, 1e-3, 1e-5, ...
  1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, ...
  1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, ...
  1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, ...
  1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, ...
  1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, ...
  1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 1e-2, ...
  1e-6, ...
  1e-2 ...
  ];

func = @(t,p) (1-cos( ...
    mod(polyval([1/p(57),1/p(4),p(3)],t),2*pi) ...
  + p(9)*sin(polyval([1/p(2),p(1)],t)) ... # mp
  + p(10)*sin(polyval([1/p(8),p(7)],t)) ... # M
  + p(11)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(2),p(1)],t)) ... # 2D-mp
  + p(12)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)) ... # 2D
  + p(13)*sin(2*polyval([1/p(2),p(1)],t)) ... # 2mp
  + p(14)*sin(polyval([1/p(57),1/p(4),p(3)],t)) ... # D
  + p(15)*sin(2*(polyval([1/p(6),p(5)],t)-polyval([1/p(57),1/p(4),p(3)],t))) ... # 2(F-D)
  + p(16)*sin(2*(polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(2),p(1)],t))) ... # 2(D-mp)
  + p(17)*sin(2*polyval([1/p(6),p(5)],t)) ... # 2F
  + p(18)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(8),p(7)],t)-polyval([1/p(2),p(1)],t)) ... # 2D - M - mp
  + p(19)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)+polyval([1/p(2),p(1)],t)) ... # 2D + mp
  + p(20)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(8),p(7)],t)) ... # 2D - M
  + p(21)*sin(polyval([1/p(8),p(7)],t)-polyval([1/p(2),p(1)],t)) ... # M - mp
  + p(22)*sin(polyval([1/p(8),p(7)],t)+polyval([1/p(2),p(1)],t)) ... # M + mp
  + p(23)*sin(polyval([1/p(2),p(1)],t)+2*polyval([1/p(6),p(5)],t)) ... # mp + 2F
  + p(24)*sin(polyval([1/p(2),p(1)],t)-2*polyval([1/p(6),p(5)],t)) ... # mp - 2F
  + p(25)*sin(4*polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(2),p(1)],t)) ... # 4D - mp
  + p(26)*sin(3*polyval([1/p(2),p(1)],t)) ... # 3mp
  + p(27)*sin(4*polyval([1/p(57),1/p(4),p(3)],t)-2*polyval([1/p(2),p(1)],t)) ... # 4D-2mp
  + p(28)*sin(polyval([1/p(6),p(5)],t)) ... # F
  + p(29)*sin(polyval([1/p(2),p(1)],t)+polyval([1/p(6),p(5)],t)) ... # mp+F
  + p(30)*sin(polyval([1/p(2),p(1)],t)-polyval([1/p(6),p(5)],t)) ... # mp-F
  + p(31)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(8),p(7)],t)+polyval([1/p(2),p(1)],t)) ... # 2D - M + mp
  + p(32)*sin(3*polyval([1/p(57),1/p(4),p(3)],t)-2*polyval([1/p(6),p(5)],t)) ... # 3D - 2F
  + p(33)*sin(polyval([1/p(57),1/p(4),p(3)],t)+2*polyval([1/p(6),p(5)],t)) ... # D + 2F
  + p(34)*sin(polyval([1/p(57),1/p(4),p(3)],t)-2*polyval([1/p(6),p(5)],t)) ... # D - 2F
  + p(35)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)+polyval([1/p(8),p(7)],t)) ... # 2D + M
  + p(36)*sin(polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(2),p(1)],t)) ... # D - mp
  + p(37)*sin(polyval([1/p(57),1/p(4),p(3)],t)+polyval([1/p(8),p(7)],t)) ... # D + M
  + p(38)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)+polyval([1/p(8),p(7)],t)-polyval([1/p(2),p(1)],t)) ... # 2D + M - mp
  + p(39)*sin(2*(polyval([1/p(57),1/p(4),p(3)],t)+polyval([1/p(2),p(1)],t))) ... # 2D + 2mp
  + p(40)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)-3*polyval([1/p(2),p(1)],t)) ... # 2D - 3mp
  + p(41)*sin(polyval([1/p(8),p(7)],t)-2*polyval([1/p(2),p(1)],t)) ... # M - 2mp
  + p(42)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(2),p(1)],t)+2*polyval([1/p(6),p(5)],t)) ... # 2D - mp + 2F
  + p(43)*sin(2*(polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(2),p(1)],t))-polyval([1/p(8),p(7)],t)) ... # 2D - M - 2mp
  + p(44)*sin(polyval([1/p(57),1/p(4),p(3)],t)+polyval([1/p(2),p(1)],t)) ... # D + mp
  + p(45)*sin(2*(polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(8),p(7)],t))) ... # 2D - 2M
  + p(46)*sin(polyval([1/p(8),p(7)],t)+2*polyval([1/p(2),p(1)],t)) ... # M + 2mp
  + p(47)*sin(2*polyval([1/p(8),p(7)],t)) ... # 2M
  + p(48)*sin(2*(polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(8),p(7)],t))-polyval([1/p(2),p(1)],t)) ... # 2D - 2M - mp
  + p(49)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)+polyval([1/p(2),p(1)],t)-2*polyval([1/p(6),p(5)],t)) ... # 2D + mp - 2F
  + p(50)*sin(2*(polyval([1/p(57),1/p(4),p(3)],t)+polyval([1/p(6),p(5)],t))) ... # 2D + 2F

  + p(51)*sin(4*polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(8),p(7)],t)-polyval([1/p(2),p(1)],t)) ... # 4D - M - mp
  + p(52)*sin(2*(polyval([1/p(2),p(1)],t)+polyval([1/p(6),p(5)],t))) ... # 2mp + 2F
  + p(53)*sin(3*polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(2),p(1)],t)) ... # 3D - mp
  + p(54)*sin(2*polyval([1/p(57),1/p(4),p(3)],t)+polyval([1/p(8),p(7)],t)+polyval([1/p(2),p(1)],t)) ... # 2D + M + mp
  + p(55)*sin(4*polyval([1/p(57),1/p(4),p(3)],t)-polyval([1/p(8),p(7)],t)-2*polyval([1/p(2),p(1)],t)) ... # 4D - M - 2mp
  + p(56)*sin(2*polyval([1/p(8),p(7)],t)-polyval([1/p(2),p(1)],t)) ... # 2M - mp

  + p(58)*sin(4*polyval([1/p(57),1/p(4),p(3)],t)) ... # 4D

  ))/2;

# dfft = fft(func(t,args)-phase);
# plot(degjcy([1:10000]),abs(dfft)([1:10000]));

[myphase,newargs,cvg,iter]=leasqr(t, phase, args, func, 0.00000001, 20, ones(size(phase)), dpargs);
cvg
iter
newargs

max(abs(myphase-phase))

